// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`Subpattern Match > should fallback to escaped char > no end 1`] = `
{
  "body": {
    "charCode": 107,
    "end": 2,
    "kind": "Char",
    "start": 1,
    "type": "Escaped",
    "value": "k",
  },
  "end": 3,
  "flags": "",
  "kind": "Regexp",
  "start": 0,
}
`;

exports[`Subpattern Match > should fallback to escaped char > with opened and closed chevrons 1`] = `
{
  "body": {
    "end": 4,
    "expressions": [
      {
        "charCode": 107,
        "end": 2,
        "kind": "Char",
        "start": 1,
        "type": "Escaped",
        "value": "k",
      },
      {
        "charCode": 60,
        "end": 3,
        "kind": "Char",
        "start": 3,
        "type": "Simple",
        "value": "<",
      },
      {
        "charCode": 62,
        "end": 4,
        "kind": "Char",
        "start": 4,
        "type": "Simple",
        "value": ">",
      },
    ],
    "kind": "Alternative",
    "start": 1,
  },
  "end": 5,
  "flags": "",
  "kind": "Regexp",
  "start": 0,
}
`;

exports[`Subpattern Match > should fallback to escaped char > with opened chevron 1`] = `
{
  "body": {
    "end": 3,
    "expressions": [
      {
        "charCode": 107,
        "end": 2,
        "kind": "Char",
        "start": 1,
        "type": "Escaped",
        "value": "k",
      },
      {
        "charCode": 60,
        "end": 3,
        "kind": "Char",
        "start": 3,
        "type": "Simple",
        "value": "<",
      },
    ],
    "kind": "Alternative",
    "start": 1,
  },
  "end": 4,
  "flags": "",
  "kind": "Regexp",
  "start": 0,
}
`;

exports[`Subpattern Match > should fallback to escaped char > with opened chevron and word 1`] = `
{
  "body": {
    "end": 8,
    "expressions": [
      {
        "charCode": 107,
        "end": 2,
        "kind": "Char",
        "start": 1,
        "type": "Escaped",
        "value": "k",
      },
      {
        "charCode": 60,
        "end": 3,
        "kind": "Char",
        "start": 3,
        "type": "Simple",
        "value": "<",
      },
      {
        "charCode": 104,
        "end": 4,
        "kind": "Char",
        "start": 4,
        "type": "Simple",
        "value": "h",
      },
      {
        "charCode": 101,
        "end": 5,
        "kind": "Char",
        "start": 5,
        "type": "Simple",
        "value": "e",
      },
      {
        "charCode": 108,
        "end": 6,
        "kind": "Char",
        "start": 6,
        "type": "Simple",
        "value": "l",
      },
      {
        "charCode": 108,
        "end": 7,
        "kind": "Char",
        "start": 7,
        "type": "Simple",
        "value": "l",
      },
      {
        "charCode": 111,
        "end": 8,
        "kind": "Char",
        "start": 8,
        "type": "Simple",
        "value": "o",
      },
    ],
    "kind": "Alternative",
    "start": 1,
  },
  "end": 9,
  "flags": "",
  "kind": "Regexp",
  "start": 0,
}
`;

exports[`Subpattern Match > should refer to group with same name 1`] = `
{
  "body": {
    "end": 25,
    "expressions": [
      {
        "body": {
          "charCode": 97,
          "end": 12,
          "kind": "Char",
          "start": 12,
          "type": "Simple",
          "value": "a",
        },
        "end": 13,
        "index": 1,
        "kind": "Group",
        "specifier": {
          "end": 11,
          "kind": "GroupName",
          "name": "my_name",
          "start": 3,
        },
        "start": 1,
        "type": "capturing",
      },
      {
        "charCode": 32,
        "end": 14,
        "kind": "Char",
        "start": 14,
        "type": "Simple",
        "value": " ",
      },
      {
        "end": 25,
        "groupName": "my_name",
        "kind": "Subpattern",
        "ref": {
          "body": {
            "charCode": 97,
            "end": 12,
            "kind": "Char",
            "start": 12,
            "type": "Simple",
            "value": "a",
          },
          "end": 13,
          "index": 1,
          "kind": "Group",
          "specifier": {
            "end": 11,
            "kind": "GroupName",
            "name": "my_name",
            "start": 3,
          },
          "start": 1,
          "type": "capturing",
        },
        "start": 15,
      },
    ],
    "kind": "Alternative",
    "start": 1,
  },
  "end": 26,
  "flags": "",
  "kind": "Regexp",
  "start": 0,
}
`;
