// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`CharClass > can be empty 1`] = `
{
  "body": {
    "end": 2,
    "expressions": [],
    "kind": 21,
    "negative": false,
    "start": 1,
  },
  "end": 3,
  "flags": "",
  "kind": 0,
  "start": 0,
}
`;

exports[`CharClass > should be quantifiable 1`] = `
{
  "body": {
    "end": 4,
    "expression": {
      "end": 3,
      "expressions": [
        {
          "charCode": 97,
          "end": 2,
          "kind": 6,
          "start": 2,
          "type": "simple",
          "value": "a",
        },
      ],
      "kind": 21,
      "negative": false,
      "start": 1,
    },
    "kind": 26,
    "quantifier": {
      "end": 4,
      "greedy": true,
      "kind": 25,
      "start": 4,
      "type": 1,
    },
    "start": 1,
  },
  "end": 5,
  "flags": "",
  "kind": 0,
  "start": 0,
}
`;

exports[`CharClass > should be quantifiable 2`] = `
{
  "body": {
    "end": 6,
    "expression": {
      "end": 3,
      "expressions": [
        {
          "charCode": 97,
          "end": 2,
          "kind": 6,
          "start": 2,
          "type": "simple",
          "value": "a",
        },
      ],
      "kind": 21,
      "negative": false,
      "start": 1,
    },
    "kind": 26,
    "quantifier": {
      "end": 6,
      "from": 1,
      "greedy": true,
      "kind": 25,
      "start": 4,
      "to": undefined,
      "type": 3,
    },
    "start": 1,
  },
  "end": 7,
  "flags": "",
  "kind": 0,
  "start": 0,
}
`;

exports[`CharClass > should correctly parse char range 1`] = `
{
  "body": {
    "end": 5,
    "expressions": [
      {
        "end": 4,
        "from": {
          "charCode": 97,
          "end": 2,
          "kind": 6,
          "start": 2,
          "type": "simple",
          "value": "a",
        },
        "kind": 4,
        "start": 2,
        "to": {
          "charCode": 122,
          "end": 4,
          "kind": 6,
          "start": 4,
          "type": "simple",
          "value": "z",
        },
      },
    ],
    "kind": 21,
    "negative": false,
    "start": 1,
  },
  "end": 6,
  "flags": "",
  "kind": 0,
  "start": 0,
}
`;

exports[`CharClass > should correctly parse if there are two open brackets 1`] = `
{
  "body": {
    "end": 5,
    "expressions": [
      {
        "charCode": 91,
        "end": 2,
        "kind": 6,
        "start": 2,
        "type": "simple",
        "value": "[",
      },
      {
        "charCode": 97,
        "end": 3,
        "kind": 6,
        "start": 3,
        "type": "simple",
        "value": "a",
      },
      {
        "charCode": 98,
        "end": 4,
        "kind": 6,
        "start": 4,
        "type": "simple",
        "value": "b",
      },
    ],
    "kind": 21,
    "negative": false,
    "start": 1,
  },
  "end": 6,
  "flags": "",
  "kind": 0,
  "start": 0,
}
`;

exports[`CharClass > should correctly parse simple char class 1`] = `
{
  "body": {
    "end": 3,
    "expressions": [
      {
        "charCode": 97,
        "end": 2,
        "kind": 6,
        "start": 2,
        "type": "simple",
        "value": "a",
      },
    ],
    "kind": 21,
    "negative": false,
    "start": 1,
  },
  "end": 4,
  "flags": "",
  "kind": 0,
  "start": 0,
}
`;

exports[`CharClass > should correctly parse syntax chars 1`] = `
{
  "body": {
    "end": 19,
    "expressions": [
      {
        "charCode": 92,
        "end": 3,
        "kind": 6,
        "start": 2,
        "type": "escaped",
        "value": "\\\\",
      },
      {
        "charCode": 46,
        "end": 4,
        "kind": 6,
        "start": 4,
        "type": "simple",
        "value": ".",
      },
      {
        "charCode": 42,
        "end": 5,
        "kind": 6,
        "start": 5,
        "type": "simple",
        "value": "*",
      },
      {
        "charCode": 43,
        "end": 6,
        "kind": 6,
        "start": 6,
        "type": "simple",
        "value": "+",
      },
      {
        "charCode": 63,
        "end": 7,
        "kind": 6,
        "start": 7,
        "type": "simple",
        "value": "?",
      },
      {
        "charCode": 41,
        "end": 8,
        "kind": 6,
        "start": 8,
        "type": "simple",
        "value": ")",
      },
      {
        "charCode": 40,
        "end": 9,
        "kind": 6,
        "start": 9,
        "type": "simple",
        "value": "(",
      },
      {
        "charCode": 93,
        "end": 11,
        "kind": 6,
        "start": 10,
        "type": "escaped",
        "value": "]",
      },
      {
        "charCode": 91,
        "end": 13,
        "kind": 6,
        "start": 12,
        "type": "escaped",
        "value": "[",
      },
      {
        "charCode": 125,
        "end": 14,
        "kind": 6,
        "start": 14,
        "type": "simple",
        "value": "}",
      },
      {
        "charCode": 123,
        "end": 15,
        "kind": 6,
        "start": 15,
        "type": "simple",
        "value": "{",
      },
      {
        "charCode": 124,
        "end": 16,
        "kind": 6,
        "start": 16,
        "type": "simple",
        "value": "|",
      },
      {
        "charCode": 36,
        "end": 17,
        "kind": 6,
        "start": 17,
        "type": "simple",
        "value": "$",
      },
      {
        "charCode": 94,
        "end": 18,
        "kind": 6,
        "start": 18,
        "type": "simple",
        "value": "^",
      },
    ],
    "kind": 21,
    "negative": false,
    "start": 1,
  },
  "end": 20,
  "flags": "",
  "kind": 0,
  "start": 0,
}
`;
